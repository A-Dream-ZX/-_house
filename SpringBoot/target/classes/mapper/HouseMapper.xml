<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.house.mapper.HouseMapper">

    <!-- 查询所有数据-->
    <resultMap id="HouseResultMap" type="com.house.entity.House">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="price" column="price"/>
        <result property="area" column="area"/>
        <result property="roomType" column="room_type"/>
        <result property="location" column="location"/>
        <result property="description" column="description"/>
        <result property="status" column="status"/>
        <result property="adminId" column="admin_id"/>
        <result property="createdAt" column="created_at"/>
        <result property="imageUrl" column="image_url"/>
        <result property="images" column="images"/>

    </resultMap>

    <select id="selectAll" resultMap="HouseResultMap">
        select * from t_house
        <trim prefix="WHERE" prefixOverrides="AND |OR">
            <if test="title != null and title != ''">
                and title like concat('%', #{title}, '%')
            </if>
            <if test="location != null and location != ''">
                and location like concat('%', #{location}, '%')
            </if>
            <if test="roomType != null and roomType != ''">
                and room_type = #{roomType}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="minPrice != null">
                and price >= #{minPrice}
            </if>
            <if test="maxPrice != null">
                and price &lt;= #{maxPrice}
            </if>
        </trim>
--         order by id desc
    </select>

    <!-- 添加数据-->
    <insert id="insert">
        insert into t_house(title, description, location, price, area, room_type, status, admin_id, created_at, image_url, images)
        values (#{title}, #{description}, #{location}, #{price}, #{area}, #{roomType}, #{status}, #{adminId}, #{createdAt}, #{imageUrl}, #{images})
    </insert>

    <update id="updateById">
        update t_house
        <set>
            <if test="title != null">title = #{title},</if>
            <if test="description != null">description = #{description},</if>
            <if test="location != null">location = #{location},</if>
            <if test="price != null">price = #{price},</if>
            <if test="area != null">area = #{area},</if>
            <if test="roomType != null">room_type = #{roomType},</if>
            <if test="status != null">status = #{status},</if>
            <if test="imageUrl != null">image_url = #{imageUrl},</if>
            <if test="images != null">images = #{images},</if>
        </set>
        where id = #{id}
    </update>

    <!-- 根据价格区间查询 -->
    <select id="selectByPriceRange" resultType="com.house.entity.House">
        select * from t_house
        where price >= #{minPrice} and price &lt;= #{maxPrice}
        order by id desc
    </select>

    <select id="selectById" resultMap="HouseResultMap">

        select *
        from t_house
        where id = #{id}
--         排序
        order by id desc
    </select>



    <!-- 获取房源状态分布统计 -->
    <select id="getHouseStats" resultType="java.util.Map">
        SELECT
            status,
            COUNT(*) as count
        FROM t_house
        GROUP BY status
    </select>

    <!-- 获取房源价格区间分布统计 -->
    <select id="getHousePriceStats" resultType="java.util.Map">
        SELECT
            CASE
                WHEN price &lt;= 1000 THEN '0-1000'
                WHEN price &lt;= 2000 THEN '1001-2000'
                WHEN price &lt;= 3000 THEN '2001-3000'
                WHEN price &lt;= 4000 THEN '3001-4000'
                ELSE '4000+'
            END as ranges,
            COUNT(*) as count
        FROM t_house
        GROUP BY
            CASE
                WHEN price &lt;= 1000 THEN '0-1000'
                WHEN price &lt;= 2000 THEN '1001-2000'
                WHEN price &lt;= 3000 THEN '2001-3000'
                WHEN price &lt;= 4000 THEN '3001-4000'
                ELSE '4000+'
            END
        ORDER BY ranges
    </select>
</mapper>
